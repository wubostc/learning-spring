<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.11</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.cc</groupId>
	<artifactId>sp2</artifactId>
	<version>0.0.1-SNAPSHOT</version>


	<properties>
		<java.version>1.8</java.version>
		<maven.compiler.target>8</maven.compiler.target>
		<maven.compiler.source>8</maven.compiler.source>

		<aspectjweaver.version>1.9.19</aspectjweaver.version>
		<jol-core.version>0.17</jol-core.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-aop</artifactId>-->
<!--		</dependency>-->


		<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.openjdk.jol/jol-core -->
		<dependency>
			<groupId>org.openjdk.jol</groupId>
			<artifactId>jol-core</artifactId>
			<version>${jol-core.version}</version>
			<scope>provided</scope>
		</dependency>



		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>4.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.22.1</version>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>junit</groupId>-->
<!--			<artifactId>junit</artifactId>-->
<!--			<version></version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->


	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 本地开发环境 -->
				<env.active>dev</env.active>
			</properties>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<!-- 生产环境 -->
				<env.active>prod</env.active>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!--
			打包执行
			1.复制到docker
			2.修改 application.yml：spring.profiles.active=@env.active@
			$ mvn install -Dmaven.test.skip=true -Pprod
			$ java -jar xxxx.jar
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<target>1.8</target>
					<source>1.8</source>
					<encoding>utf-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
<!--					<excludes>-->
<!--						&lt;!&ndash; 打包后的jar包中不包括配置文件 &ndash;&gt;-->
<!--						&lt;!&ndash; 通常是指classpath下目录下的文件，这样可以避免编写时的找不到相应文件 &ndash;&gt;-->
<!--						<exclude>*.xml</exclude>-->
<!--						<exclude>*.properties</exclude>-->
<!--						<exclude>*.yml</exclude>-->
<!--					</excludes>-->
					<archive>
						<manifest>
							<mainClass>com.cc.sp2.App</mainClass> <!-- 指定入口类 -->
							<addClasspath>true</addClasspath> <!-- 在jar的MF文件中生成classpath属性 -->
							<classpathPrefix>lib/</classpathPrefix> <!-- classpath前缀,即依赖jar包的路径 -->
						</manifest>
						<!-- 将config目录加入classpath目录 -->
<!--						<manifestEntries>-->
<!--							<Class-Path>config/</Class-Path>-->
<!--						</manifestEntries>-->
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>



		</plugins>
	</build>

</project>
